#!/usr/bin/env bash
place=Vellore
echo -e "                                                     \033[1;32m  LIC ${place} Divisional Office\033[0m"
echo -e "                                                    \033[4;31mThis script written by $(echo KALAISELVAN |tr [a-z] [A-Z])\033[0m"

function service-restarter {
clear
echo 
echo "Service restarting.."
echo
host="p073as01 p073as02 p073db01 p073db02 p073bk k073ps01 k073ps02"
service="chronyd.service node_exporter.service"

function restarter {
for i in ${host}
do
   ping -c 1 ${i} &> /dev/null
   pingec=${?}
   if [ ${pingec} -eq 0 ]
   then
       for j in ${service}
       do
           echo ${i} | grep "bk" &> /dev/null
           bk=${?}
           if [ ${bk} -eq 0 ]
           then
           echo -e "${i}" \ : $(ssh -q do_admin@${i} sudo systemctl restart ${j} &>/dev/null; if [ ${?} -eq 0 ];then echo "${j} Restarted" ;else echo "Not restarted" ;fi )
           sleep 1
           break
           else
               echo "${i}": $(ssh -q do_admin@${i} sudo systemctl restart ${j} &>/dev/null; if [ ${?} -eq 0 ];then echo "${j} Restarted" ;else echo "Not restarted";fi)
               sleep 1
           fi
       done
   else
       echo "Not available"
   fi
done
}
function check {
echo ${service}
read -p "Do you want really restart this service : " hmm
date | grep -i "Fri" &>/dev/null
var=${?}
hmm1=$(echo ${hmm} | tr [:upper:] [:lower:])
if [ ${hmm1} == "yes" ] && [ ${var} -eq 0 ]
then
    restarter
elif [ ${var} -ne 0 ] && [ ${hmm1} == "yes" ]
then
    echo
    echo "Today is Not Friday so you dont want restart the service.."
    read -p "If you want to restart te service give 'yes' or 'no' : " option
    option1=$(echo ${option} | tr [:upper:] [:lower:])
    if [ ${option1} == "yes" ]
    then
        echo "Service restarting begin."
        restarter
    fi
elif [ ${hmm1} == "no" ]
then
    echo "Ok bye.."
    exit 1
else
    echo
    echo "Enter 'yes' to reastarting.."
    check
fi
}
check
}

function service-status {
echo 
echo "Service status checking.."
echo
host="p073as01 p073as02 p073db01 p073db02 p073bk k073ps01 k073ps02"
service="chronyd.service node_exporter.service"
for i in ${host}
do
    ping -c 1 ${i} &> /dev/null
    pingec=${?}
    if [ ${pingec} -eq 0 ]
    then
	for j in ${service}
	do
	    echo ${i} | grep "bk" &> /dev/null
	    bk=${?}
	    if [ ${bk} -eq 0 ]
	    then
	        echo -e "${i}" \ : "$(ssh -q do_admin@${i} systemctl show -p SubState ${j} | sed 's/SubState=//g')" "|" Restart Date ":" "$(ssh -q do_admin@p073as01 sudo systemctl status ${j} | awk 'FNR==3{print $5,$6,$7,$8,$9,$10,$11}')" "|" "service ${j}"
	        sleep 1
		break
	    else
		echo -e "${i}": "$(ssh -q do_admin@${i} systemctl show -p SubState ${j} | sed 's/SubState=//g')" "|" Restart Date ":" "$(ssh -q do_admin@p073as01 systemctl status ${j} | awk 'FNR==3{print $5,$6,$7,$8,$9,$10,$11}')" "|" "service ${j}"
		sleep 1
	    fi
	done
    else
        echo "Not available"
    fi
done
}
echo
echo -e "1.) service-status\n2.) service-restart"
read -p "Enter the number which option : " num
if [ ${num} -eq 1 ]
then
    service-status
elif [ ${num} -eq 2 ]
then
    service-restarter
else
    echo "This option ${num} not valid. again run the script."
fi


